#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    chosen { zmk,matrix-transform = &imprint_function_row_full_bottom_row; };

    combos {
        compatible = "zmk,combos";

        bluetooth0 {
            bindings = <&bt BT_SEL 0>;
            key-positions = <13 10>;
            layers = <0 1>;
            slow-release;
        };
    };

    behaviors {
        hold_for_boot: hold_for_boot {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_BOOT";
            bindings = <&bootloader>, <&sys_reset>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <800>;
            quick-tap-ms = <100>;
        };

        T_RGB_H_SYS: T_RGB_H_SYS {
            compatible = "zmk,behavior-hold-tap";
            label = "T_RGB_H_SYS";
            bindings = <&rgb_ug>, <&mo>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        WINDOWS {
            bindings = <
&kp LG(LA(K))  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_PREV          &kp C_PLAY_PAUSE  &kp C_NEXT                  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp LS(LG(S))     &hold_for_boot 0 0  &mo 3                    &kp K_LOCK
&kp GRAVE      &kp N1             &kp N2           &kp N3              &kp N4            &kp N5                      &kp N6                &kp N7                &kp N8            &kp N9              &kp N0                   &kp MINUS
&kp TAB        &kp B              &kp L            &kp D               &kp C             &kp V                       &kp J                 &kp F                 &kp O             &kp U               &kp COMMA                &kp EQUAL
&kp ESCAPE     &mt LEFT_GUI N     &mt LEFT_ALT R   &mt LEFT_CONTROL T  &mt LEFT_SHIFT S  &kp G                       &kp Y                 &mt RIGHT_SHIFT H     &mt LCTRL A       &mt E LEFT_ALT      &mt RIGHT_GUI SEMICOLON  &kp SLASH
&sk LSHFT      &kp X              &kp Q            &kp M               &kp W             &kp Z                       &kp K                 &kp P                 &kp SINGLE_QUOTE  &kp SEMICOLON       &kp PERIOD               &kp BACKSLASH
&kp LG(SPACE)  &kp LG(DOT)        &kp LGUI         &kp LALT            &kp LCTRL                                                           &kp LEFT              &kp DOWN          &kp UP_ARROW        &kp RIGHT                &T_RGB_H_SYS RGB_TOG 4
                                                                       &kp SPACE         &kp BACKSPACE  &kp PG_UP    &mkp LCLK             &kp ENTER             &kp SPACE
                                                                       &kp HOME          &kp END        &kp PG_DN    &mkp RCLK             &kp CAPS              &caps_word
            >;
        };

        MAC {
            bindings = <
&kp LG(LS(M))  &trans             &trans            &trans  &trans        &trans            &trans  &trans  &trans  &trans  &trans  &kp LC(LG(Q))
&trans         &trans             &trans            &trans  &trans        &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans         &trans             &trans            &trans  &trans        &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans         &trans             &trans            &trans  &trans        &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans         &trans             &trans            &trans  &trans        &trans            &trans  &trans  &trans  &trans  &trans  &trans
&kp LC(SPACE)  &kp LC(LG(SPACE))  &kp LEFT_CONTROL  &trans  &kp LEFT_GUI                            &trans  &trans  &trans  &trans  &trans
                                                            &trans        &trans  &trans    &trans  &trans  &trans
                                                            &trans        &trans  &trans    &trans  &trans  &trans
            >;
        };

        SYMBOLS {
            bindings = <
&kp F1  &kp F2        &kp F3      &kp F4        &kp F5         &kp F6                   &kp F7       &kp F8         &kp F9        &kp F10       &kp F11   &kp F12
&trans  &trans        &trans      &trans        &trans         &trans                   &trans       &kp LS(LT)     &kp LS(LT)    &kp LS(GT)    &trans    &trans
&trans  &trans        &kp MINUS   &kp LS(PLUS)  &kp LS(COLON)  &kp SEMI                 &kp SQT      &kp LS(PIPE)   &kp LBKT      &kp RBKT      &trans    &trans
&trans  &kp LS(EXCL)  &kp LS(LT)  &kp LS(GT)    &kp EQUAL      &kp ESC                  &kp LS(DQT)  &kp LS(AMPS)   &kp LS(LPAR)  &kp LS(RPAR)  &trans    &trans
&trans  &trans        &kp FSLH    &kp LS(STAR)  &kp LS(AT)     &kp LS(POUND)            &kp GRAVE    &kp LS(CARET)  &kp LS(LBRC)  &kp LS(RBRC)  &kp FSLH  &trans
&trans  &trans        &trans      &trans        &trans                                               &trans         &trans        &trans        &trans    &trans
                                                &trans         &trans         &trans    &trans       &trans         &trans
                                                &trans         &trans         &trans    &trans       &trans         &trans
            >;
        };

        BLUETOOTH {
            bindings = <
&trans  &trans        &trans        &trans        &trans        &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans        &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans        &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans        &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans                                        &trans  &trans  &trans  &trans  &trans
                                                  &trans        &bt BT_CLR    &trans    &trans  &trans  &trans
                                                  &trans        &trans        &trans    &trans  &trans  &trans
            >;
        };

        SYSTEM {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans           &trans           &trans           &trans           &trans
&trans  &to 0   &to 1   &trans  &trans  &to 5             &trans  &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &trans           &trans           &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans           &trans           &trans           &trans           &trans
&trans  &trans  &trans  &trans  &trans                            &trans           &trans           &trans           &trans           &trans
                                &trans  &trans  &trans    &trans  &trans           &trans
                                &trans  &trans  &trans    &trans  &trans           &trans
            >;
        };

        TEST {
            bindings = <
&kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &kp N6            &kp N7  &kp N8  &kp N9  &kp N0  &kp A   &kp B
&kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &kp N6            &kp N7  &kp N8  &kp N9  &kp N0  &kp A   &kp B
&kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &kp N6            &kp N7  &kp N8  &kp N9  &kp N0  &kp A   &kp B
&kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &kp N6            &kp N7  &kp N8  &kp N9  &kp N0  &kp A   &kp B
&kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &kp N6            &kp N7  &kp N8  &kp N9  &kp N0  &kp A   &kp B
&kp N1  &kp N2  &kp N3  &kp N4  &kp N5                            &kp N6  &kp N7  &kp N8  &kp N9  &kp N0
                                &kp N1  &kp N2  &kp N3    &kp N4  &kp N5  &kp N6
                                &kp N1  &kp N2  &kp N3    &kp N4  &kp N5  &kp N6
            >;
        };
    };
};

// right hand trackball configuration
// &trackball_peripheral_listener {
//    input-processors =
//     activate layer 3 within 500ms of the trackball moving
//     <&zip_temp_layer 3 500>;
// };
//left hand trackball configuration

&trackball_central_listener {
    input-processors =
        // multiply sensitivity by 1, divide by 3 (make it slower for scrolling),,,,,,,,,,
        <&zip_xy_scaler 1 3>,
        // make this trackball output scrolling events by default instead of cursor movement,,,,,,,,,,
        <&zip_xy_to_scroll_mapper>,
        // invert vertical scrolling so that the view moves in the same direction as the top of the trackball.,,,,,,,,,,
        <&zip_scroll_transform INPUT_TRANSFORM_Y_INVERT>;
};
